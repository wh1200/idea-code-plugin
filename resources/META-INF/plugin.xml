<!--
~ ©2009-2018 南京擎盾信息科技有限公司 All rights reserved.
-->

<idea-plugin>
  <id>com.wuhao.code.check</id>
  <name>Aegis Code Check</name>
  <version>1.4.6</version>
  <vendor email="wuhao@aegis-data.cn"/>

  <description><![CDATA[
    <article class="markdown-body entry-content" itemprop="text">
      <h2>Introduction</h2>
      <p>The contents following are written in Chinese and translated by google translate.</p>
      <p>This project is an Intelli IDEAJ plugin
        Initially created for the company's unified programming specification, it mainly submits some code checks that
        IDE failed to provide, as well as some convenient development features. It also includes support for Java and
        Kotlin, as well as support for the front-end framework VueJS.
      </p>
      <p>The functions contained in the project may be somewhat complicated and cannot be reflected in the project name,
        so a name is casually used.
      </p>
      <p>This project was originally used for internal use by the company. The main purpose of open source is to let
        everyone provide some questions for inspection and suggestions.
      </p>
      <h2>Features</h2>
      <h3>Mandatory style</h3>
      <ul>
        <li>Some mandatory presets for code styles at project startup, including indentation and encoding</li>
        <li>Forced code rearrangement</li>
        <li>Write some file templates by default (Kotlin)</li>
      </ul>
      <h3>Encoding Check</h3>
      <ul>
        <li>Check the file encoding is UTF-8 or not.</li>
      </ul>
      <h3>Indent check</h3>
      <ul>
        <li>Indent check for checking code style configuration of IDE, included languages are java, kotlin, javascript,
          typescript, vue etc.
        </li>
        <li>Normal indentation is set to 2 spaces, and continuous indentation is twice as long as normal indentation. It
          is 4
          spaces.
        </li>
      </ul>
      <h3>
        Java &amp; Kotlin related
      </h3>
      <ul>
        <li>The line count of a .java file or .kt file is limited to <strong>800</strong> lines.
        </li>
        <li>The line count of java method or kotlin function is limited to <strong>100</strong> lines.
        </li>
        <li>The class must add a document comment with @author and @since tags.</li>
        <li>The interface method must add a document comment.</li>
        <li>Direct use of numbers as arguments is forbidden(check for numbers great than 10), provided code correction
          function can extract parameters as variables
        </li>
        <li>Added space check and fix</li>
        <li>Increase the sorting of fields and methods of java classes and blank line corrections</li>
        <li>Completely new kotlin code rearrangement function.</li>
        <li>Options for organizing import and code rearrangement when the formatting code is turned on by default when
          starting the project (Java language) v1.2.6
        </li>
        <li>Except for the JUnit test class, it is not allowed to use "System.out.println" or "System.err.println" or
          "println"
          in kotlin for console output. The output should always uses the log and provides the repair function. The
          default is
          to use slf4j.
        </li>
        <li>
          Automatically add comments to interface methods when formatting code. [1.3.8]
        </li>
      </ul>
      <h3>Spring Framework Related</h3>
      <ul>
        <li>When using the "@Value" annotation in a class to import spring's environment variables, code hints are given
          for
          the contents of spring boot's default configuration file application.yml (temporarily not supporting
          properties file).
        </li>
        <li>Use the "@Value" annotation in the class to introduce spring's environment variable, you can use the find
          statement to jump to the corresponding configuration item in application.yml
        </li>
      </ul>
      <h3>Front End Related</h3>
      <ul>
        <li>When the .vue file is formatted, the label attributes in the template are reordered, one line per
          attribute.
        </li>
        <li>When the .vue file is formatted, the label property in the template starts with v- or: and the property
          value is
          formatted.
        </li>
        <li>The length of the template part (template tag part) in the .vue file must not exceed 150 lines.</li>
        <li>.vue file template, if the property value is a complex expression, can be extracted as a calculated
          property.
        </li>
      </ul>
      <h2>Build</h2>
      <p>Copy the project code to the local, open the project using idea, configure the IntelliJ Platform Plugin SDK,
        and add the following in the Classpath configuration of the SDK:/Applications/IntelliJ
        IDEA.app/Contents/plugins/JavaScriptLanguage/lib/javascript-openapi.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/JavaScriptLanguage/lib/JavaScriptLanguage.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/Kotlin/lib/kotlin-plugin.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/Spring/lib/spring.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/SpringBoot/lib/spring-boot.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/SpringSecurity/lib/SpringSecurity.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/SpringMvc/lib/spring-mvc-api.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/SpringMvc/lib/SpringMvc.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/SpringBoot/lib/spring-boot-cloud.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/SpringBoot/lib/spring-boot-config-yaml.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/SpringBoot/lib/spring-boot-initializr.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/SpringBoot/lib/spring-boot-mvc.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/SpringBoot/lib/spring-boot-run.jar
        /Users/wuhao/Library/Application Support/IntelliJIdea2018.1/vuejs/lib/vuejs.jar
        /Applications/IntelliJ IDEA.app/Contents/plugins/yaml/lib/yaml.jar
      </p>
      <p>Then select Build - Prepare Plugin Module For Deployment. After the build is completed, a zip file will be
        generated in the project directory. The file is the installation file for the idea plug-in.
      </p>
      <blockquote>
        <p>Note that the VueJS plugin is located in the user plugin installation directory instead of the IDEA
          installation
          directory. For Mac users, the plugin directory is in path of "~/Library/Application Support/Intellij IDEA/".
        </p>
      </blockquote>
    </article>
    ]]>
  </description>
  <change-notes><![CDATA[
    <h5>1.4.6</h5>
    <ul>
      <li>Enhanced check for single-character naming</li>
    </ul>
    <h5>1.4.5</h5>
    <ul>
      <li>Add gutters for class style component of vue.js, including lifecycle functions, props, computed props and watchers</li>
    </ul>
    <h5>v1.4.0</h5>
    <ul>
      <li>适配webstorm</li>
    </ul>
    <h5>v1.3.7</h5>
    <ul>
      <li>Add naming pattern check for property, method, field, function and constant property.</li>
      <li>Clear blank lines at start and end of companion object.</li>
      <li>Val property in object should be named like a const property.</li>
    </ul>
    ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="145.0"/>

  <extensions defaultExtensionNs="com.intellij">
    <postStartupActivity implementation="com.wuhao.code.check.PluginStart"/>
    <lang.rearranger language="LESS"
                     implementationClass="com.wuhao.code.check.style.arrangement.less.LessRearranger"/>
    <lang.rearranger language="kotlin"
                     implementationClass="com.wuhao.code.check.style.arrangement.kotlin.KotlinRearranger"/>
    <lang.rearranger language="Vue"
                     implementationClass="com.wuhao.code.check.style.arrangement.vue.VueRearranger"/>
    <createFromTemplateHandler implementation="com.wuhao.code.check.template.CreateFromKotlinTemplateHandler"
                               order="first"/>
    <completion.contributor
        implementationClass="com.wuhao.code.check.completion.FontAwesomeIconNameCompletion"
        language="Vue" order="FIRST"/>
    <completion.contributor
        implementationClass="com.wuhao.code.check.completion.SpringBootConfigValueInjectCodeCompletion"
        language="JAVA" order="FIRST"/>
    <completion.contributor
        implementationClass="com.wuhao.code.check.completion.SpringBootConfigValueInjectCodeCompletion"
        language="kotlin" order="FIRST"/>
    <inspectionToolProvider id="aegis.code.check.inspection"
                            order="FIRST"
                            implementation="com.wuhao.code.check.inspection.inspections.CheckProvider"/>
    <gotoDeclarationHandler
        implementation="com.wuhao.code.check.gotohandler.GotoSpringBootConfigPropertyDeclarationHandler"/>
    <gotoDeclarationHandler implementation="com.wuhao.code.check.gotohandler.MyBatisGotoDeclarationHandler"/>
    <gotoDeclarationHandler implementation="com.wuhao.code.check.gotohandler.VueLifetimeFunctionHandler"/>
    <preFormatProcessor implementation="com.wuhao.code.check.processors.VueAttrFixPreProcessor"
                        id="VueAttrFixProcessor" order="last"/>
    <preFormatProcessor implementation="com.wuhao.code.check.processors.FixKotlinPreProcessor"
                        id="FixKotlinPreProcessor" order="first"/>
    <preFormatProcessor implementation="com.wuhao.code.check.processors.FixLessPreProcessor"
                        id="FixLessPreProcessor" order="first"/>
    <postFormatProcessor implementation="com.wuhao.code.check.processors.VueAttrsWhitespaceFixPostProcessor"
                         id="VueAttrsWhitespaceFixProcessor" order="last"/>
    <postFormatProcessor implementation="com.wuhao.code.check.processors.FixVueTemplateExpressionPostProcessor"
                         id="FixVueTemplateExpressionProcessor" order="first"/>
    <postFormatProcessor implementation="com.wuhao.code.check.processors.FixJavaBlankLinePostProcessor"
                         id="FixJavaBlankLineProcessor" order="last"/>
    <postFormatProcessor implementation="com.wuhao.code.check.processors.FixKotlinPostProcessor"
                         id="FixKotlinProcessor" order="last"/>
    <codeInsight.lineMarkerProvider
        implementationClass="com.wuhao.code.check.linemarker.MybatisMapperClassLineMarkerProvider"
        id="MybatisMapperClassLineMarkerProvider" language="JAVA"/>
    <codeInsight.lineMarkerProvider
        implementationClass="com.wuhao.code.check.linemarker.MybatisMapperClassLineMarkerProvider"
        id="MybatisMapperClassLineMarkerProviderKotlin" language="kotlin"/>
    <codeInsight.lineMarkerProvider
        implementationClass="com.wuhao.code.check.linemarker.MybatisMapperFileLineMarkerProvider"
        id="MybatisMapperFileLineMarkerProvider2" language="XML"/>
    <codeInsight.lineMarkerProvider
        implementationClass="com.wuhao.code.check.linemarker.VueLineMarkerProvider"
        id="VueLineMarkerProvider" language="Vue"/>
    <applicationConfigurable
        instance="com.wuhao.code.check.ui.AegisPluginSettingsConfigurable"/>
    <applicationService
        serviceImplementation="com.wuhao.code.check.ui.PluginSettings"/>
  </extensions>

  <actions>
    <!--<action id="CreateRunConfigurationAegis" class="com.wuhao.code.check.action.CreateRunConfiguration" text="新建运行配置"-->
            <!--description="新建运行配置">-->
      <!--<add-to-group group-id="NewGroup" anchor="first"/>-->
    <!--</action>-->
    <action id="CreateVueProject" class="com.wuhao.code.check.action.CreateVueProjectAction" text="擎盾VueJS项目"
            description="新建Vue项目">
      <add-to-group group-id="NewGroup" anchor="first"/>
    </action>
    <action id="CreateMyBatisMapper" class="com.wuhao.code.check.action.CreateMyBatisMapperAction"
            text="MyBatis Mapper配置"
            description="MyBatis Mapper配置">
      <add-to-group group-id="NewGroup" anchor="first"/>
    </action>
    <action id="CreateJavaKotlinProject" class="com.wuhao.code.check.action.CreateJavaKotlinProjectAction"
            text="擎盾Java&amp;Kotlin项目" description="新建Vue项目">
      <add-to-group group-id="NewGroup" anchor="first"/>
    </action>
  </actions>
  <depends optional="true">org.jetbrains.kotlin</depends>
  <depends optional="true">com.intellij.modules.json</depends>
  <!--<depends optional="true">com.intellij.spring</depends>-->
  <!--<depends optional="true">com.intellij.spring.boot</depends>-->
  <depends optional="true">org.jetbrains.plugins.vue</depends>
  <depends optional="true">org.jetbrains.plugins.less</depends>
</idea-plugin>

